menu "LITMUS^RT"

menu "Real-Time Synchronization"

config NP_SECTION
	bool "Non-preemptive section support"
	depends on !SPARC64
	default n
	help
	  Include support for flag-based non-preemptive section signaling
	  from userspace.

	  (currently broken on SPARC64)

	  Say Yes if you want FMLP short critical section  synchronization support.


config SRP
	bool "Stack Resource Policy (SRP)"
	default n
	help
	  Include support for Baker's Stack Resource Policy. 

	  Say Yes if you want FMLP local long  critical section synchronization support.

config FMLP
	bool "FMLP support"
	depends on NP_SECTION
	default n
	help
	  Include support for deterministic multiprocessor real-time
	  synchronization support.

	  Say Yes if you want FMLP long critical section synchronization support.

endmenu

menu "Tracing"

config FEATHER_TRACE
	bool "Feather-Trace Infrastructure"
	default y
	help
	  Feather-Trace basic tracing infrastructure. Includes device file
	  driver and instrumentation point support.
	  

config SCHED_TASK_TRACE
	bool "Trace real-time tasks"
	depends on FEATHER_TRACE
	default y
	help
	  Include support for the sched_trace_XXX() tracing functions. This
          allows the collection of real-time task events such as job
	  completions, job releases, early completions, etc. This results in  a
	  small overhead in the scheduling code. Disable if the overhead is not
	  acceptable (e.g., benchmarking).

	  Say Yes for debugging.
	  Say No for overhead tracing.

config SCHED_DEBUG_TRACE
	bool "TRACE() debugging"
	default y
	help
	  Include support for sched_trace_log_messageg(), which is used to
	  implement TRACE(). If disabled, no TRACE() messages will be included
	  in the kernel, and no overheads due to debugging statements will be
	  incurred by the scheduler. Disable if the overhead is not acceptable
	  (e.g. benchmarking).

	  Say Yes for debugging.
	  Say No for overhead tracing.

config SCHED_OVERHEAD_TRACE
	bool "Record timestamps for overhead measurements"
	depends on FEATHER_TRACE
	default n
	help
	  Export event stream for overhead tracing.
	  Say Yes for overhead tracing.


endmenu

endmenu
